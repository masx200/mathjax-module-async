{"version":3,"file":"index.js","sources":["../lib/defaultoptions.ts","../lib/cachepromise.ts","../lib/createObjectURLjavascript.ts","../lib/guid.ts","../lib/loadscript.ts","../lib/createfunction.ts","../lib/fetchsource.ts","../lib/preloadscript.ts","../lib/preloaded.ts","../lib/version.ts","../lib/mathjaxurl.ts","../lib/config.ts","../lib/configscript.ts","../lib/scriptstoload.ts","../lib/loadmodules.ts","../lib/loadmathjax.ts","../lib/initmathjax.ts","../lib/mathrenderfuns.ts","../lib/rendermath.ts"],"sourcesContent":["export const defaultoptions = {\r\n    containerWidth: 1261.3333740234375,\r\n    em: 16,\r\n    ex: 8.65,\r\n    family: \"\",\r\n    lineWidth: 1000000,\r\n    scale: 1.223133484162896,\r\n};\r\n","export function cachepromise<T extends (arg: any, ...rgs: any) => Promise<any>>(\r\n    fn: T\r\n): T {\r\n    const sourcecache = new Map();\r\n    return (async (key: any, ...rgs: any) => {\r\n        if (sourcecache.get(key)) {\r\n            return sourcecache.get(key);\r\n        }\r\n        const loadpro = fn(key, ...rgs);\r\n        sourcecache.set(key, loadpro);\r\n        return loadpro;\r\n    }) as T;\r\n}\r\n","export function createObjectURLjavascript(body: BlobPart) {\r\n    return URL.createObjectURL(\r\n        new Blob([body], { type: \"application/javascript\" })\r\n    );\r\n}\r\n","export function guid() {\r\n    return \"xxxxxxxxyxxxxyxxxyyxxxyxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (Math.random() * 16) | 0,\r\n            v = c == \"x\" ? r : (r & 3) | 8;\r\n        return v.toString(16);\r\n    });\r\n}\r\n","import { cachepromise } from \"./cachepromise\";\r\nexport const loadscript = cachepromise(async function (\r\n    src: string,\r\n    opts: any = {}\r\n) {\r\n    if (!src) {\r\n        throw new Error(\"src\");\r\n    }\r\n\r\n    return new Promise<void>((res, rej) => {\r\n        function clearsideeffect() {\r\n            try {\r\n                window.removeEventListener(\"error\", errorlistner);\r\n            } catch (error) {}\r\n\r\n            script.remove();\r\n            script.onload = script.onerror = null;\r\n        }\r\n        const errorlistner = (e: ErrorEvent) => {\r\n            rej(e.error);\r\n            clearsideeffect();\r\n        };\r\n        const script = document.createElement(\"script\");\r\n        Object.assign(script, opts, { async: true });\r\n        script.src = src;\r\n        script.onload = () => {\r\n            res();\r\n            clearsideeffect();\r\n        };\r\n        script.onerror = (e, s, l, c, r) => {\r\n            rej(\"string\" === typeof e ? e : r ? r : e);\r\n            clearsideeffect();\r\n        };\r\n        window.addEventListener(\"error\", errorlistner, { once: true });\r\n\r\n        document.head.appendChild(script);\r\n    });\r\n});\r\n","import { createObjectURLjavascript } from \"./createObjectURLjavascript\";\r\nimport { guid } from \"./guid\";\r\nimport { loadscript } from \"./loadscript\";\r\n\r\nexport async function createfunction(...args: string[]): Promise<Function> {\r\n    const funbody = args[args.length - 1];\r\n    const funargs = args.slice(0, args.length - 1);\r\n    const callbackname = \"function-\" + guid();\r\n    const scriptbody = `window['${callbackname}']=function(${funargs\r\n        // .map((n) => JSON.stringify(n))\r\n        .join(\"\\n,\\n\")}){\\n${funbody}\\n}`;\r\n    const scripturl = createObjectURLjavascript(scriptbody);\r\n    try {\r\n        await loadscript(scripturl);\r\n\r\n        return Reflect.get(window, callbackname) as Function;\r\n    } catch (error) {\r\n        throw error;\r\n    } finally {\r\n        URL.revokeObjectURL(scripturl);\r\n        Reflect.set(window, callbackname, undefined);\r\n    }\r\n}\r\n","import { cachepromise } from \"./cachepromise\";\r\n\r\nexport const fetchsource = cachepromise(async function (\r\n    url: string,\r\n    opts: any = {}\r\n) {\r\n    return fetch(url, opts)\r\n        .then((r) =>\r\n            r.ok ? r : Promise.reject(new Error(\"fetch failed:\" + url))\r\n        )\r\n        .then((r) => r.text());\r\n});\r\n","import { createObjectURLjavascript } from \"./createObjectURLjavascript\";\r\nimport { preloaded } from \"./preloaded\";\r\n\r\nexport const preloadscript = createObjectURLjavascript(getmathjaxafter());\r\nfunction getmathjaxafter() {\r\n    return `\r\nMathJax.loader.preLoad(${preloaded.map((a) => JSON.stringify(a)).join(\",\")})\r\n    `;\r\n}\r\n// console.log(getmathjaxafter());\r\n","//1470.11kb\r\nexport const preloaded = [\r\n    \"startup\",\r\n    \"[tex]/action\",\r\n    \"[tex]/all-packages\",\r\n    \"[tex]/ams\",\r\n    \"[tex]/amscd\",\r\n    \"[tex]/bbox\",\r\n    \"[tex]/boldsymbol\",\r\n    \"[tex]/braket\",\r\n    \"[tex]/bussproofs\",\r\n    \"[tex]/cancel\",\r\n    \"[tex]/cases\",\r\n    \"[tex]/centernot\",\r\n    \"[tex]/color\",\r\n    \"[tex]/colortbl\",\r\n    \"[tex]/colorv2\",\r\n    \"[tex]/configmacros\",\r\n    \"[tex]/empheq\",\r\n    \"[tex]/enclose\",\r\n    \"[tex]/extpfeil\",\r\n    \"[tex]/gensymb\",\r\n    \"[tex]/html\",\r\n    \"[tex]/mathtools\",\r\n    \"[tex]/mhchem\",\r\n    \"[tex]/newcommand\",\r\n    \"[tex]/noerrors\",\r\n    \"[tex]/noundefined\",\r\n    \"[tex]/physics\",\r\n    \"[tex]/require\",\r\n    \"[tex]/setoptions\",\r\n    \"[tex]/tagformat\",\r\n    \"[tex]/textcomp\",\r\n    \"[tex]/textmacros\",\r\n    \"[tex]/unicode\",\r\n    \"[tex]/upgreek\",\r\n    \"[tex]/verb\",\r\n    \"core\",\r\n    \"input/asciimath\",\r\n    \"input/mml\",\r\n    \"input/tex-base\",\r\n    \"input/tex-full\",\r\n    \"loader\",\r\n    \"output/chtml\",\r\n    \"output/chtml/fonts/tex\",\r\n];\r\n","export const version = \"3.2.0\";\r\n","import { version } from \"./version.js\";\r\n\r\nexport const mathjaxbase = `https://cdn.jsdelivr.net/npm/mathjax@${version}/es5`;\r\n","import { mathjaxbase } from \"./mathjaxurl.js\";\r\nconst config = {\r\n    startup: { typeset: false },\r\n    loader: {\r\n        load: [\r\n            // \"input/asciimath\",\r\n            // \"output/chtml\",\r\n            // \"input/tex-full\",\r\n            // \"input/mml\",\r\n        ],\r\n        paths: {\r\n            mathjax: mathjaxbase,\r\n        },\r\n    },\r\n};\r\nexport { config };\r\n","import { config } from \"./config\";\r\n\r\nexport const configscript = URL.createObjectURL(\r\n    new Blob([getmathjaxafter()], { type: \"application/javascript\" })\r\n);\r\nfunction getmathjaxafter() {\r\n    return `\r\nwindow.MathJax=${JSON.stringify(config)}\r\n    `;\r\n}\r\n","import { preloadscript } from \"./preloadscript\";\r\nimport { configscript } from \"./configscript\";\r\nimport { mathjaxbase } from \"./mathjaxurl\";\r\n\r\n// export const mathjaxurl = mathjaxbase + \"/\" + `tex-mml-chtml.min.js`;\r\n//2281.69kb\r\nconst mathjaxmodules = [\r\n    \"core\",\r\n    \"input/asciimath\",\r\n    \"output/chtml\",\r\n    \"input/tex-full\",\r\n    \"input/mml\",\r\n    \"output/chtml/fonts/tex\",\r\n];\r\nconst mathjaxurls = mathjaxmodules.map(getrealmoduleurl);\r\nexport const scriptstoload = [\r\n    configscript,\r\n\r\n    getrealmoduleurl(\"startup\"),\r\n    preloadscript,\r\n    ...mathjaxurls,\r\n];\r\n\r\nfunction getrealmoduleurl(value: string): string {\r\n    return mathjaxbase + \"/\" + value + \".min.js\";\r\n}\r\n// console.log(scriptstoload);\r\n","import { createfunction } from \"./createfunction\";\r\nimport { fetchsource } from \"./fetchsource\";\r\nimport { scriptstoload } from \"./scriptstoload\";\r\n\r\nexport async function loadmodules(): Promise<Record<string, any>> {\r\n    const scriptscontent = await Promise.all(\r\n        scriptstoload.map((u) => fetchsource(u))\r\n    );\r\n    // console.log(scriptscontent);\r\n\r\n    const scriptbody = scriptscontent.join(\"\\n;\\n\");\r\n    // console.log(scriptbody);\r\n\r\n    let MathJax: Record<string, any> = {};\r\n    const fake = {\r\n        get MathJax() {\r\n            return MathJax;\r\n        },\r\n        set MathJax(value) {\r\n            MathJax = value;\r\n        },\r\n    };\r\n    const global = new Proxy(window, {\r\n        get(t, p, r) {\r\n            const value =\r\n                Reflect.get(fake, p, fake) || Reflect.get(window, p, window);\r\n            if (typeof value === \"function\") {\r\n                return value.bind(window);\r\n            } else {\r\n                return value;\r\n            }\r\n        },\r\n\r\n        has(t, p) {\r\n            return Reflect.has(t, p) || Reflect.has(fake, p);\r\n        },\r\n        set(t, p, v, r) {\r\n            return Reflect.set(fake, p, v, fake);\r\n        },\r\n        ownKeys(t) {\r\n            return Array.from(\r\n                new Set([...Reflect.ownKeys(t), ...Reflect.ownKeys(fake)])\r\n            );\r\n        },\r\n        defineProperty(t, p, a) {\r\n            return Reflect.defineProperty(fake, p, a);\r\n        },\r\n\r\n        deleteProperty(t, p) {\r\n            return Reflect.deleteProperty(fake, p);\r\n        },\r\n    });\r\n\r\n    const proxymathjax = new Proxy(\r\n        {},\r\n        {\r\n            get(t, p, r) {\r\n                return Reflect.get(MathJax, p, MathJax);\r\n            },\r\n            set(t, p, v, r) {\r\n                return Reflect.set(MathJax, p, v, MathJax);\r\n            },\r\n            has(t, p) {\r\n                return Reflect.has(MathJax, p);\r\n            },\r\n            ownKeys(t) {\r\n                return Reflect.ownKeys(MathJax);\r\n            },\r\n            defineProperty(t, p, a) {\r\n                return Reflect.defineProperty(MathJax, p, a);\r\n            },\r\n\r\n            deleteProperty(t, p) {\r\n                return Reflect.deleteProperty(MathJax, p);\r\n            },\r\n        }\r\n    );\r\n    const equalglobals = [\r\n        \"self\",\r\n        \"frames\",\r\n        \"parent\",\r\n        \"content\",\r\n        \"window\",\r\n        \"top\",\r\n        \"globalThis\",\r\n    ];\r\n    const likewindow = Object.fromEntries(\r\n        equalglobals\r\n            // Reflect.ownKeys(window)\r\n            //     .filter((k) => Object.is(window, Reflect.get(window, k)))\r\n            .map((k) => [k, global])\r\n    );\r\n    // three global variables are accidentally defined\r\n    //https://github.com/mathjax/MathJax/issues/2748\r\n    const accidentallyvariables = {\r\n        value: undefined,\r\n        mathfontfamily: undefined,\r\n        mathfontsize: undefined,\r\n    };\r\n    const scope = Object.assign(\r\n        accidentallyvariables,\r\n        { MathJax: proxymathjax },\r\n        likewindow\r\n    );\r\n    const argskey = Object.keys(scope);\r\n    const argsvalue = Object.values(scope);\r\n    const fun = await createfunction(...argskey, scriptbody);\r\n    // const fun = new Function(...argskey, scriptbody);\r\n    Reflect.apply(fun, global, argsvalue);\r\n    // console.info.call(console, global);\r\n    return MathJax;\r\n}\r\n","// import { config } from \"./config.js\";\r\n//import { loadsheet } from \"./loadsheet.js\";\r\n//import { mathjaxcss } from \"./mathjaxcss.js\";\r\n// function setmathjaxconfig() {\r\n//     if (window.MathJax) {\r\n//         return;\r\n//     }\r\n//     window.MathJax = config;\r\n// }\r\nimport { cachepromise } from \"./cachepromise\";\r\nimport { loadmodules } from \"./loadmodules\";\r\nexport const loadmathjax = cachepromise(async function () {\r\n    //  await loadsheet(mathjaxcss);\r\n    return loadmodules();\r\n});\r\n","import { loadmathjax } from \"./loadmathjax.js\";\r\nlet MathJaxcache: Record<string, any> | undefined;\r\nexport async function initmathjax() {\r\n    if (MathJaxcache) {\r\n        return MathJaxcache;\r\n    }\r\n    const MathJax = await loadmathjax();\r\n    await MathJax.startup.promise;\r\n    MathJaxcache = MathJax;\r\n    return MathJax;\r\n}\r\n","export const mathrenderfuns: Record<string, string | undefined> = {\r\n    latex: \"tex2chtmlPromise\",\r\n    asciimath: \"asciimath2chtmlPromise\",\r\n    mathml: \"mathml2chtmlPromise\",\r\n};\r\n","import { defaultoptions } from \"./defaultoptions\";\r\nimport { initmathjax } from \"./initmathjax.js\";\r\nimport { mathrenderfuns } from \"./mathrenderfuns\";\r\nexport type MathjaxInputType = \"latex\" | \"mathml\" | \"asciimath\";\r\nexport async function rendermath(\r\n    input: string,\r\n    type: MathjaxInputType,\r\n    opts: Partial<Record<string, any> & typeof defaultoptions> = {}\r\n): Promise<string> {\r\n    const container: HTMLElement = document.createElement(\"div\");\r\n\r\n    const renderfun = mathrenderfuns[type];\r\n\r\n    if (!renderfun) {\r\n        throw new Error(\"mathtype\" + ` \"latex\" | \"mathml\" | \"asciimath\"`);\r\n    }\r\n    const MathJax = await initmathjax();\r\n    const mathjax = MathJax;\r\n    mathjax.startup.document.addStyleSheet();\r\n    const options = Object.assign({}, defaultoptions, opts);\r\n\r\n    const node = await Reflect.apply(Reflect.get(MathJax, renderfun), MathJax, [\r\n        input.trim(),\r\n        options,\r\n    ]);\r\n\r\n    container.appendChild(node);\r\n\r\n    MathJax.startup.document.clear();\r\n    MathJax.startup.document.updateDocument();\r\n\r\n    return container.innerHTML;\r\n}\r\n"],"names":["defaultoptions","containerWidth","em","ex","family","lineWidth","scale","cachepromise","fn","sourcecache","Map","key","get","rgs","loadpro","set","createObjectURLjavascript","body","URL","createObjectURL","Blob","type","guid","replace","c","r","Math","random","toString","loadscript","src","opts","Error","Promise","res","rej","clearsideeffect","window","removeEventListener","errorlistner","error","script","remove","onload","onerror","e","document","createElement","Object","assign","async","s","l","addEventListener","once","head","appendChild","createfunction","args","funbody","length","funargs","slice","callbackname","scriptbody","join","scripturl","Reflect","revokeObjectURL","undefined","fetchsource","url","fetch","then","ok","reject","text","preloadscript","map","a","JSON","stringify","mathjaxbase","config","startup","typeset","loader","load","paths","mathjax","configscript","mathjaxurls","getrealmoduleurl","scriptstoload","value","loadmodules","all","u","scriptscontent","MathJax","fake","global","Proxy","t","p","bind","has","v","ownKeys","Array","from","Set","defineProperty","deleteProperty","proxymathjax","equalglobals","likewindow","fromEntries","k","accidentallyvariables","mathfontfamily","mathfontsize","scope","argskey","keys","argsvalue","values","fun","apply","MathJaxcache","loadmathjax","initmathjax","promise","mathrenderfuns","latex","asciimath","mathml","rendermath","input","container","renderfun","addStyleSheet","options","trim","node","clear","updateDocument","innerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA,IAAiB;IAC1BC,gBAAgB;IAChBC,IAAI;IACJC,IAAI;IACJC,QAAQ;IACRC,WAAW;IACXC,OAAO;;;SCNKC,EACZC;QAEMC,IAAc,IAAIC;;0BAChB,WAAOC;;;;;yBACPF,EAAYG,IAAID;;;;8CACTF,EAAYG,IAAID;;;uCAFHE,qDAAAA;2BAIlBC,IAAUN,kBAAGG,WAAQE,KAC3BJ,EAAYM,IAAIJ,GAAKG,uBACdA;;;;;;;;;;;;;;SCVCE,EAA0BC;WAC/BC,IAAIC,gBACP,IAAIC,KAAK,EAACH,KAAO;QAAEI,MAAM;;;;SCFjBC;WACL,sCAAsCC,QAAQ,UAAS,SAAUC;YAChEC,IAAqB,KAAhBC,KAAKC,WAAiB;gBAClB,OAALH,IAAWC,IAAS,IAAJA,IAAS,GACxBG,SAAS;;;;ACHnB,IAAMC,IAAatB;sBAAa,WACnCuB;;;;;oBACAC,6CAAY,IAEPD;;;;sBACK,IAAIE,MAAM;;;0CAGb,IAAIC,SAAc,SAACC,GAAKC;6BAClBC;;4BAEDC,OAAOC,oBAAoB,SAASC;0BACtC,OAAOC;wBAETC,EAAOC,UACPD,EAAOE,SAASF,EAAOG,UAAU;;wBAE/BL,IAAe,SAACM;wBAClBV,EAAIU,EAAEL,QACNJ;uBAEEK,IAASK,SAASC,cAAc;oBACtCC,OAAOC,OAAOR,GAAQV,GAAM;wBAAEmB,QAAO;wBACrCT,EAAOX,MAAMA,GACbW,EAAOE,SAAS;wBACZT,KACAE;uBAEJK,EAAOG,UAAU,SAACC,GAAGM,GAAGC,GAAG5B,GAAGC;wBAC1BU,EAAI,mBAAoBU,IAAIA,IAAIpB,KAAQoB,IACxCT;uBAEJC,OAAOgB,iBAAiB,SAASd,GAAc;wBAAEe,OAAM;wBAEvDR,SAASS,KAAKC,YAAYf;;;;;;;;;;;;;;SC/BZgB;;;;;0BAAf;;;;;mCAAiCC,qCAAAA;uBAC9BC,IAAUD,EAAKA,EAAKE,SAAS,IAC7BC,IAAUH,EAAKI,MAAM,GAAGJ,EAAKE,SAAS,IACtCG,IAAe,cAAczC;gBAC7B0C,sBAAwBD,0BAA2BF,EAEpDI,KAAK,yBAAeN;gBACnBO,IAAYlD,EAA0BgD,4BAElCnC,EAAWqC;;;0CAEVC,QAAQvD,IAAIyB,QAAQ0B;;;;;;oCAI3B7C,IAAIkD,gBAAgBF,IACpBC,QAAQpD,IAAIsB,QAAQ0B,QAAcM;;;;;;;;;;AClBnC,IAAMC,IAAc/D;sBAAa,WACpCgE;;;;;uBACAxC,6CAAY,uBAELyC,MAAMD,GAAKxC,GACb0C,MAAK,SAAChD;2BACHA,EAAEiD,KAAKjD,IAAIQ,QAAQ0C,OAAO,IAAI3C,MAAM,kBAAkBuC;oBAEzDE,MAAK,SAAChD;2BAAMA,EAAEmD;;;;;;;;;;;;MCPVC,IAAgB7D,qCCFJ,EACrB,WACA,gBACA,sBACA,aACA,eACA,cACA,oBACA,gBACA,oBACA,gBACA,eACA,mBACA,eACA,kBACA,iBACA,sBACA,gBACA,iBACA,kBACA,iBACA,cACA,mBACA,gBACA,oBACA,kBACA,qBACA,iBACA,iBACA,oBACA,mBACA,kBACA,oBACA,iBACA,iBACA,cACA,QACA,mBACA,aACA,kBACA,kBACA,UACA,gBACA,2BDtC+B8D,KAAI,SAACC;WAAMC,KAAKC,UAAUF;IAAId,KAAK;;AEN/D,ICEMiB,mDDFU,kBECjBC,IAAS;IACXC,SAAS;QAAEC,UAAS;;IACpBC,QAAQ;QACJC,MAAM;QAMNC,OAAO;YACHC,SAASP;;;GCTRQ,IAAexE,IAAIC,gBAC5B,IAAIC,KAAK,6BAII4D,KAAKC,UAAUE,iBAJE;IAAE9D,MAAM;;;ACG1C,IAQMsE,IARiB,EACnB,QACA,mBACA,gBACA,kBACA,aACA,2BAE+Bb,IAAIc,IAC1BC,MACTH,GAEAE,EAAiB,YACjBf,aACGc;;AAGP,SAASC,EAAiBE;WACfZ,IAAc,MAAMY,IAAQ;;;SCpBjBC;;;;;0BAAf;;;;;mCAC0B9D,QAAQ+D,IACjCH,EAAcf,KAAI,SAACmB;2BAAM3B,EAAY2B;;;;uBADnCC,YAKAlC,IAAakC,EAAejC,KAAK,UAGnCkC,IAA+B,IAC7BC;;+BAESD;;gCAECL;wBACRK,IAAUL;;mBAGZO,IAAS,IAAIC,MAAMjE,QAAQ;oBAC7BzB,cAAI2F,GAAGC,GAAG/E;4BACAqE,IACF3B,QAAQvD,IAAIwF,GAAMI,GAAGJ,MAASjC,QAAQvD,IAAIyB,QAAQmE,GAAGnE;+BACpC,qBAAVyD,IACAA,EAAMW,KAAKpE,UAEXyD;;oBAIfY,cAAIH,GAAGC;+BACIrC,QAAQuC,IAAIH,GAAGC,MAAMrC,QAAQuC,IAAIN,GAAMI;;oBAElDzF,cAAIwF,GAAGC,GAAGG,GAAGlF;+BACF0C,QAAQpD,IAAIqF,GAAMI,GAAGG,GAAGP;;oBAEnCQ,kBAAQL;+BACGM,MAAMC,KACT,IAAIC,gBAAQ5C,QAAQyC,QAAQL,OAAOpC,QAAQyC,QAAQR;;oBAG3DY,yBAAeT,GAAGC,GAAGzB;+BACVZ,QAAQ6C,eAAeZ,GAAMI,GAAGzB;;oBAG3CkC,yBAAeV,GAAGC;+BACPrC,QAAQ8C,eAAeb,GAAMI;;oBAItCU,IAAe,IAAIZ,MACrB,IACA;oBACI1F,cAAI2F,GAAGC,GAAG/E;+BACC0C,QAAQvD,IAAIuF,GAASK,GAAGL;;oBAEnCpF,cAAIwF,GAAGC,GAAGG,GAAGlF;+BACF0C,QAAQpD,IAAIoF,GAASK,GAAGG,GAAGR;;oBAEtCO,cAAIH,GAAGC;+BACIrC,QAAQuC,IAAIP,GAASK;;oBAEhCI,kBAAQL;+BACGpC,QAAQyC,QAAQT;;oBAE3Ba,yBAAeT,GAAGC,GAAGzB;+BACVZ,QAAQ6C,eAAeb,GAASK,GAAGzB;;oBAG9CkC,yBAAeV,GAAGC;+BACPrC,QAAQ8C,eAAed,GAASK;;oBAI7CW,IAAe,EACjB,QACA,UACA,UACA,WACA,UACA,OACA;gBAEEC,IAAapE,OAAOqE,YACtBF,EAGKrC,KAAI,SAACwC;2BAAM,EAACA,GAAGjB;sBAIlBkB,IAAwB;oBAC1BzB,YAAOzB;oBACPmD,qBAAgBnD;oBAChBoD,mBAAcpD;mBAEZqD,IAAQ1E,OAAOC,OACjBsE,GACA;oBAAEpB,SAASe;mBACXE,IAEEO,IAAU3E,OAAO4E,KAAKF,IACtBG,IAAY7E,OAAO8E,OAAOJ,iBACdjE,kBAAkBkE,YAAS3D;;;uBAAvC+D,YAEN5D,QAAQ6D,MAAMD,GAAK1B,GAAQwB,uBAEpB1B;;;;;;;;;;ACnGJ,ICVH8B,GDUSC,IAAc3H,YAAa;;;;sCAE7BwF;;;;;;;;;SCXWoC;;;;;0BAAf;;;;;qBACCF;;;;0CACOA;;;mCAEWC;;;uBAAhB/B,wBACAA,EAAQf,QAAQgD;;;uBACtBH,IAAe9B,sBACRA;;;;;;;;;;ACTJ,IAAMkC,IAAqD;IAC9DC,OAAO;IACPC,WAAW;IACXC,QAAQ;;;SCCUC;;;;;0BAAf,WACHC,GACArH;;;;;oBACAU,6CAA6D,IAEvD4G,IAAyB7F,SAASC,cAAc;gBAEhD6F,IAAYP,EAAehH;;;;sBAGvB,IAAIW,MAAM;;;mCAEEmG;;;uBAAhBhC,YACUA,EACRf,QAAQtC,SAAS+F,iBACnBC,IAAU9F,OAAOC,OAAO,IAAIjD,GAAgB+B;6BAE/BoC,QAAQ6D,MAAM7D,QAAQvD,IAAIuF,GAASyC,IAAYzC,GAAS,EACvEuC,EAAMK,QACND;;;uBAFEE,YAKNL,EAAUnF,YAAYwF,IAEtB7C,EAAQf,QAAQtC,SAASmG,SACzB9C,EAAQf,QAAQtC,SAASoG;mCAElBP,EAAUQ;;;;;;;;;;"}